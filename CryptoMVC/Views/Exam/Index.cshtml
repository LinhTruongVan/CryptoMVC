@using CryptoMVC.Models
@model ExamEncryptionViewModel
@{
    ViewBag.Title = "Upload Exam";
}

<h2>@ViewBag.Title.</h2>
<div class="row">
    <div class="col-md-8">
        <section id="examData">
            @using (Html.BeginForm("Encrypt", "Exam", new {ReturnUrl = ViewBag.ReturnUrl}, FormMethod.Post, new {@class = "form-horizontal", role = "form", enctype = "multipart/form-data"}))
            {
                @Html.AntiForgeryToken()
                <hr/>
                @Html.ValidationSummary(true, "", new {@class = "text-danger"})
                <div class="form-group">
                    @Html.LabelFor(m => m.File, new {@class = "col-md-2 control-label"})
                    <div class="col-md-10">
                        <input type="file" class="form-control max-width-100" name="File" placeholder="Select file..">
                        @Html.ValidationMessageFor(m => m.File, "", new {@class = "text-danger"})
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.Key, new {@class = "col-md-2 control-label"})
                    <div class="col-md-10">
                        @Html.TextBoxFor(m => m.Key, new {@class = "form-control max-width-100"})
                        @Html.ValidationMessageFor(m => m.Key, "", new {@class = "text-danger"})
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.SelectedExamType, new {@class = "col-md-2 control-label"})
                    <div class="col-md-10">
                        @Html.DropDownListFor(m => m.SelectedExamType, Model.ExamTypes(User), new {@class = "form-control max-width-100"})
                        @Html.ValidationMessageFor(m => m.SelectedExamType, "", new {@class = "text-danger"})
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.StartTime, new {@class = "col-md-2 control-label"})
                    <div class="col-md-10">
                        <div class="input-group date datetimepicker">
                            @Html.TextBoxFor(m => m.StartTime, new {@class = "form-control max-width-100"})
                            <span class="input-group-addon">
                                <span class="glyphicon glyphicon-calendar"></span>
                            </span>
                        </div>
                        @Html.ValidationMessageFor(m => m.StartTime, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.EndTime, new {@class = "col-md-2 control-label"})
                    <div class="col-md-10">
                        <div class="input-group date datetimepicker">
                            @Html.TextBoxFor(m => m.EndTime, new {@class = "form-control max-width-100"})
                            <span class="input-group-addon">
                                <span class="glyphicon glyphicon-calendar"></span>
                            </span>
                        </div>
                        @Html.ValidationMessageFor(m => m.EndTime, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Upload" class="btn btn-primary"/>
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.CipherText, new {@class = "col-md-2 control-label"})
                    <div class="col-md-10">
                        @Html.TextArea("CipherText", Model.CipherText, new {@class = "form-control max-width-100", @readonly = "readonly", @rows = 8})
                    </div>
                </div>
            }
        </section>
    </div>
</div>