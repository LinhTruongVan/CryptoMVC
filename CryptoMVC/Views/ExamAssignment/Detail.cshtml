@using CryptoMVC.Models
@model ExamAssignmentDetailViewModel
@{
    ViewBag.Title = "Deadline: " + Model.Deadline;
}

<h4>@ViewBag.Title.</h4>
<h4 id="remainingMinutes"></h4>
<div class="row">
    <div class="col-md-12">
        <section id="answerForm">
            @using (Html.BeginForm("Submit", "ExamAssignment", new {ReturnUrl = ViewBag.ReturnUrl}, FormMethod.Post, new {@class = "form-horizontal", role = "form", enctype = "multipart/form-data"}))
            {
                @Html.AntiForgeryToken()
                <hr/>
                @Html.ValidationSummary(true, "", new {@class = "text-danger"})
                @Html.HiddenFor(m => m.ExamAssignmentId)
                @Html.HiddenFor(m => m.Deadline)
                <div class="form-group">
                    <div class="col-md-12">
                        @Html.TextAreaFor(m => m.Content, new {@class = "form-control max-width-100", rows = "18"})
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Submit" class="btn btn-primary" style="float: right"/>
                    </div>
                </div>
            }
        </section>
    </div>
</div>

@section Scripts
{
    <script type="text/javascript">
        var remainingMinutes = @ViewBag.RemainingMinutes;
        document.getElementById('remainingMinutes').innerHTML = 'Remaining minutes:' + remainingMinutes;
        setInterval(function() {
            remainingMinutes--;
            document.getElementById('remainingMinutes').innerHTML = 'Remaining minutes:' + remainingMinutes;
        }, 60000);
    </script>
}

